{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/random-js/lib/random.js","webpack:///./src/App.js","webpack:///./src/custom.js","webpack:///./src/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AAAA;AACL,GAAG,QAWH;AACA,CAAC,Q;;;;;;;;;;;;;;;;;AC3sBD;AACgE;;AAEhE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uDAAuD;AAC9F;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C,OAAO,MAAM,OAAO;AAC/D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0DAA0D,gCAAgC;AAC1F,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,YAAY;;AAE1D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;;AAEb;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wEAAwE,gDAAgD;AACxH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,KAAK;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA,2BAA2B,qBAAqB;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;AC/aA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,SAAS;AACpB,WAAW,IAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;;;ACnGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/*jshint eqnull:true*/\n(function (root) {\n  \"use strict\";\n\n  var GLOBAL_KEY = \"Random\";\n\n  var imul = (typeof Math.imul !== \"function\" || Math.imul(0xffffffff, 5) !== -5 ?\n    function (a, b) {\n      var ah = (a >>> 16) & 0xffff;\n      var al = a & 0xffff;\n      var bh = (b >>> 16) & 0xffff;\n      var bl = b & 0xffff;\n      // the shift by 0 fixes the sign on the high part\n      // the final |0 converts the unsigned value into a signed value\n      return (al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0;\n    } :\n    Math.imul);\n\n  var stringRepeat = (typeof String.prototype.repeat === \"function\" && \"x\".repeat(3) === \"xxx\" ?\n    function (x, y) {\n      return x.repeat(y);\n    } : function (pattern, count) {\n      var result = \"\";\n      while (count > 0) {\n        if (count & 1) {\n          result += pattern;\n        }\n        count >>= 1;\n        pattern += pattern;\n      }\n      return result;\n    });\n\n  function Random(engine) {\n    if (!(this instanceof Random)) {\n      return new Random(engine);\n    }\n\n    if (engine == null) {\n      engine = Random.engines.nativeMath;\n    } else if (typeof engine !== \"function\") {\n      throw new TypeError(\"Expected engine to be a function, got \" + typeof engine);\n    }\n    this.engine = engine;\n  }\n  var proto = Random.prototype;\n\n  Random.engines = {\n    nativeMath: function () {\n      return (Math.random() * 0x100000000) | 0;\n    },\n    mt19937: (function (Int32Array) {\n      // http://en.wikipedia.org/wiki/Mersenne_twister\n      function refreshData(data) {\n        var k = 0;\n        var tmp = 0;\n        for (;\n          (k | 0) < 227; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k + 397) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        for (;\n          (k | 0) < 623; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k - 227) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        tmp = (data[623] & 0x80000000) | (data[0] & 0x7fffffff);\n        data[623] = data[396] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n      }\n\n      function temper(value) {\n        value ^= value >>> 11;\n        value ^= (value << 7) & 0x9d2c5680;\n        value ^= (value << 15) & 0xefc60000;\n        return value ^ (value >>> 18);\n      }\n\n      function seedWithArray(data, source) {\n        var i = 1;\n        var j = 0;\n        var sourceLength = source.length;\n        var k = Math.max(sourceLength, 624) | 0;\n        var previous = data[0] | 0;\n        for (;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x0019660d)) + (source[j] | 0) + (j | 0)) | 0;\n          i = (i + 1) | 0;\n          ++j;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n          if (j >= sourceLength) {\n            j = 0;\n          }\n        }\n        for (k = 623;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x5d588b65)) - i) | 0;\n          i = (i + 1) | 0;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n        }\n        data[0] = 0x80000000;\n      }\n\n      function mt19937() {\n        var data = new Int32Array(624);\n        var index = 0;\n        var uses = 0;\n\n        function next() {\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n\n          var value = data[index];\n          index = (index + 1) | 0;\n          uses += 1;\n          return temper(value) | 0;\n        }\n        next.getUseCount = function() {\n          return uses;\n        };\n        next.discard = function (count) {\n          uses += count;\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n          while ((count - index) > 624) {\n            count -= 624 - index;\n            refreshData(data);\n            index = 0;\n          }\n          index = (index + count) | 0;\n          return next;\n        };\n        next.seed = function (initial) {\n          var previous = 0;\n          data[0] = previous = initial | 0;\n\n          for (var i = 1; i < 624; i = (i + 1) | 0) {\n            data[i] = previous = (imul((previous ^ (previous >>> 30)), 0x6c078965) + i) | 0;\n          }\n          index = 624;\n          uses = 0;\n          return next;\n        };\n        next.seedWithArray = function (source) {\n          next.seed(0x012bd6aa);\n          seedWithArray(data, source);\n          return next;\n        };\n        next.autoSeed = function () {\n          return next.seedWithArray(Random.generateEntropyArray());\n        };\n        return next;\n      }\n\n      return mt19937;\n    }(typeof Int32Array === \"function\" ? Int32Array : Array)),\n    browserCrypto: (typeof crypto !== \"undefined\" && typeof crypto.getRandomValues === \"function\" && typeof Int32Array === \"function\") ? (function () {\n      var data = null;\n      var index = 128;\n\n      return function () {\n        if (index >= 128) {\n          if (data === null) {\n            data = new Int32Array(128);\n          }\n          crypto.getRandomValues(data);\n          index = 0;\n        }\n\n        return data[index++] | 0;\n      };\n    }()) : null\n  };\n\n  Random.generateEntropyArray = function () {\n    var array = [];\n    var engine = Random.engines.nativeMath;\n    for (var i = 0; i < 16; ++i) {\n      array[i] = engine() | 0;\n    }\n    array.push(new Date().getTime() | 0);\n    return array;\n  };\n\n  function returnValue(value) {\n    return function () {\n      return value;\n    };\n  }\n\n  // [-0x80000000, 0x7fffffff]\n  Random.int32 = function (engine) {\n    return engine() | 0;\n  };\n  proto.int32 = function () {\n    return Random.int32(this.engine);\n  };\n\n  // [0, 0xffffffff]\n  Random.uint32 = function (engine) {\n    return engine() >>> 0;\n  };\n  proto.uint32 = function () {\n    return Random.uint32(this.engine);\n  };\n\n  // [0, 0x1fffffffffffff]\n  Random.uint53 = function (engine) {\n    var high = engine() & 0x1fffff;\n    var low = engine() >>> 0;\n    return (high * 0x100000000) + low;\n  };\n  proto.uint53 = function () {\n    return Random.uint53(this.engine);\n  };\n\n  // [0, 0x20000000000000]\n  Random.uint53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x200000) {\n        if ((high & 0x3fffff) === 0x200000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low;\n      }\n    }\n  };\n  proto.uint53Full = function () {\n    return Random.uint53Full(this.engine);\n  };\n\n  // [-0x20000000000000, 0x1fffffffffffff]\n  Random.int53 = function (engine) {\n    var high = engine() | 0;\n    var low = engine() >>> 0;\n    return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n  };\n  proto.int53 = function () {\n    return Random.int53(this.engine);\n  };\n\n  // [-0x20000000000000, 0x20000000000000]\n  Random.int53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x400000) {\n        if ((high & 0x7fffff) === 0x400000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n      }\n    }\n  };\n  proto.int53Full = function () {\n    return Random.int53Full(this.engine);\n  };\n\n  function add(generate, addend) {\n    if (addend === 0) {\n      return generate;\n    } else {\n      return function (engine) {\n        return generate(engine) + addend;\n      };\n    }\n  }\n\n  Random.integer = (function () {\n    function isPowerOfTwoMinusOne(value) {\n      return ((value + 1) & value) === 0;\n    }\n\n    function bitmask(masking) {\n      return function (engine) {\n        return engine() & masking;\n      };\n    }\n\n    function downscaleToLoopCheckedRange(range) {\n      var extendedRange = range + 1;\n      var maximum = extendedRange * Math.floor(0x100000000 / extendedRange);\n      return function (engine) {\n        var value = 0;\n        do {\n          value = engine() >>> 0;\n        } while (value >= maximum);\n        return value % extendedRange;\n      };\n    }\n\n    function downscaleToRange(range) {\n      if (isPowerOfTwoMinusOne(range)) {\n        return bitmask(range);\n      } else {\n        return downscaleToLoopCheckedRange(range);\n      }\n    }\n\n    function isEvenlyDivisibleByMaxInt32(value) {\n      return (value | 0) === 0;\n    }\n\n    function upscaleWithHighMasking(masking) {\n      return function (engine) {\n        var high = engine() & masking;\n        var low = engine() >>> 0;\n        return (high * 0x100000000) + low;\n      };\n    }\n\n    function upscaleToLoopCheckedRange(extendedRange) {\n      var maximum = extendedRange * Math.floor(0x20000000000000 / extendedRange);\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() & 0x1fffff;\n          var low = engine() >>> 0;\n          ret = (high * 0x100000000) + low;\n        } while (ret >= maximum);\n        return ret % extendedRange;\n      };\n    }\n\n    function upscaleWithinU53(range) {\n      var extendedRange = range + 1;\n      if (isEvenlyDivisibleByMaxInt32(extendedRange)) {\n        var highRange = ((extendedRange / 0x100000000) | 0) - 1;\n        if (isPowerOfTwoMinusOne(highRange)) {\n          return upscaleWithHighMasking(highRange);\n        }\n      }\n      return upscaleToLoopCheckedRange(extendedRange);\n    }\n\n    function upscaleWithinI53AndLoopCheck(min, max) {\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() | 0;\n          var low = engine() >>> 0;\n          ret = ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n        } while (ret < min || ret > max);\n        return ret;\n      };\n    }\n\n    return function (min, max) {\n      min = Math.floor(min);\n      max = Math.floor(max);\n      if (min < -0x20000000000000 || !isFinite(min)) {\n        throw new RangeError(\"Expected min to be at least \" + (-0x20000000000000));\n      } else if (max > 0x20000000000000 || !isFinite(max)) {\n        throw new RangeError(\"Expected max to be at most \" + 0x20000000000000);\n      }\n\n      var range = max - min;\n      if (range <= 0 || !isFinite(range)) {\n        return returnValue(min);\n      } else if (range === 0xffffffff) {\n        if (min === 0) {\n          return Random.uint32;\n        } else {\n          return add(Random.int32, min + 0x80000000);\n        }\n      } else if (range < 0xffffffff) {\n        return add(downscaleToRange(range), min);\n      } else if (range === 0x1fffffffffffff) {\n        return add(Random.uint53, min);\n      } else if (range < 0x1fffffffffffff) {\n        return add(upscaleWithinU53(range), min);\n      } else if (max - 1 - min === 0x1fffffffffffff) {\n        return add(Random.uint53Full, min);\n      } else if (min === -0x20000000000000 && max === 0x20000000000000) {\n        return Random.int53Full;\n      } else if (min === -0x20000000000000 && max === 0x1fffffffffffff) {\n        return Random.int53;\n      } else if (min === -0x1fffffffffffff && max === 0x20000000000000) {\n        return add(Random.int53, 1);\n      } else if (max === 0x20000000000000) {\n        return add(upscaleWithinI53AndLoopCheck(min - 1, max - 1), 1);\n      } else {\n        return upscaleWithinI53AndLoopCheck(min, max);\n      }\n    };\n  }());\n  proto.integer = function (min, max) {\n    return Random.integer(min, max)(this.engine);\n  };\n\n  // [0, 1] (floating point)\n  Random.realZeroToOneInclusive = function (engine) {\n    return Random.uint53Full(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneInclusive = function () {\n    return Random.realZeroToOneInclusive(this.engine);\n  };\n\n  // [0, 1) (floating point)\n  Random.realZeroToOneExclusive = function (engine) {\n    return Random.uint53(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneExclusive = function () {\n    return Random.realZeroToOneExclusive(this.engine);\n  };\n\n  Random.real = (function () {\n    function multiply(generate, multiplier) {\n      if (multiplier === 1) {\n        return generate;\n      } else if (multiplier === 0) {\n        return function () {\n          return 0;\n        };\n      } else {\n        return function (engine) {\n          return generate(engine) * multiplier;\n        };\n      }\n    }\n\n    return function (left, right, inclusive) {\n      if (!isFinite(left)) {\n        throw new RangeError(\"Expected left to be a finite number\");\n      } else if (!isFinite(right)) {\n        throw new RangeError(\"Expected right to be a finite number\");\n      }\n      return add(\n        multiply(\n          inclusive ? Random.realZeroToOneInclusive : Random.realZeroToOneExclusive,\n          right - left),\n        left);\n    };\n  }());\n  proto.real = function (min, max, inclusive) {\n    return Random.real(min, max, inclusive)(this.engine);\n  };\n\n  Random.bool = (function () {\n    function isLeastBitTrue(engine) {\n      return (engine() & 1) === 1;\n    }\n\n    function lessThan(generate, value) {\n      return function (engine) {\n        return generate(engine) < value;\n      };\n    }\n\n    function probability(percentage) {\n      if (percentage <= 0) {\n        return returnValue(false);\n      } else if (percentage >= 1) {\n        return returnValue(true);\n      } else {\n        var scaled = percentage * 0x100000000;\n        if (scaled % 1 === 0) {\n          return lessThan(Random.int32, (scaled - 0x80000000) | 0);\n        } else {\n          return lessThan(Random.uint53, Math.round(percentage * 0x20000000000000));\n        }\n      }\n    }\n\n    return function (numerator, denominator) {\n      if (denominator == null) {\n        if (numerator == null) {\n          return isLeastBitTrue;\n        }\n        return probability(numerator);\n      } else {\n        if (numerator <= 0) {\n          return returnValue(false);\n        } else if (numerator >= denominator) {\n          return returnValue(true);\n        }\n        return lessThan(Random.integer(0, denominator - 1), numerator);\n      }\n    };\n  }());\n  proto.bool = function (numerator, denominator) {\n    return Random.bool(numerator, denominator)(this.engine);\n  };\n\n  function toInteger(value) {\n    var number = +value;\n    if (number < 0) {\n      return Math.ceil(number);\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function convertSliceArgument(value, length) {\n    if (value < 0) {\n      return Math.max(value + length, 0);\n    } else {\n      return Math.min(value, length);\n    }\n  }\n  Random.pick = function (engine, array, begin, end) {\n    var length = array.length;\n    var start = begin == null ? 0 : convertSliceArgument(toInteger(begin), length);\n    var finish = end === void 0 ? length : convertSliceArgument(toInteger(end), length);\n    if (start >= finish) {\n      return void 0;\n    }\n    var distribution = Random.integer(start, finish - 1);\n    return array[distribution(engine)];\n  };\n  proto.pick = function (array, begin, end) {\n    return Random.pick(this.engine, array, begin, end);\n  };\n\n  function returnUndefined() {\n    return void 0;\n  }\n  var slice = Array.prototype.slice;\n  Random.picker = function (array, begin, end) {\n    var clone = slice.call(array, begin, end);\n    if (!clone.length) {\n      return returnUndefined;\n    }\n    var distribution = Random.integer(0, clone.length - 1);\n    return function (engine) {\n      return clone[distribution(engine)];\n    };\n  };\n\n  Random.shuffle = function (engine, array, downTo) {\n    var length = array.length;\n    if (length) {\n      if (downTo == null) {\n        downTo = 0;\n      }\n      for (var i = (length - 1) >>> 0; i > downTo; --i) {\n        var distribution = Random.integer(0, i);\n        var j = distribution(engine);\n        if (i !== j) {\n          var tmp = array[i];\n          array[i] = array[j];\n          array[j] = tmp;\n        }\n      }\n    }\n    return array;\n  };\n  proto.shuffle = function (array) {\n    return Random.shuffle(this.engine, array);\n  };\n\n  Random.sample = function (engine, population, sampleSize) {\n    if (sampleSize < 0 || sampleSize > population.length || !isFinite(sampleSize)) {\n      throw new RangeError(\"Expected sampleSize to be within 0 and the length of the population\");\n    }\n\n    if (sampleSize === 0) {\n      return [];\n    }\n\n    var clone = slice.call(population);\n    var length = clone.length;\n    if (length === sampleSize) {\n      return Random.shuffle(engine, clone, 0);\n    }\n    var tailLength = length - sampleSize;\n    return Random.shuffle(engine, clone, tailLength - 1).slice(tailLength);\n  };\n  proto.sample = function (population, sampleSize) {\n    return Random.sample(this.engine, population, sampleSize);\n  };\n\n  Random.die = function (sideCount) {\n    return Random.integer(1, sideCount);\n  };\n  proto.die = function (sideCount) {\n    return Random.die(sideCount)(this.engine);\n  };\n\n  Random.dice = function (sideCount, dieCount) {\n    var distribution = Random.die(sideCount);\n    return function (engine) {\n      var result = [];\n      result.length = dieCount;\n      for (var i = 0; i < dieCount; ++i) {\n        result[i] = distribution(engine);\n      }\n      return result;\n    };\n  };\n  proto.dice = function (sideCount, dieCount) {\n    return Random.dice(sideCount, dieCount)(this.engine);\n  };\n\n  // http://en.wikipedia.org/wiki/Universally_unique_identifier\n  Random.uuid4 = (function () {\n    function zeroPad(string, zeroCount) {\n      return stringRepeat(\"0\", zeroCount - string.length) + string;\n    }\n\n    return function (engine) {\n      var a = engine() >>> 0;\n      var b = engine() | 0;\n      var c = engine() | 0;\n      var d = engine() >>> 0;\n\n      return (\n        zeroPad(a.toString(16), 8) +\n        \"-\" +\n        zeroPad((b & 0xffff).toString(16), 4) +\n        \"-\" +\n        zeroPad((((b >> 4) & 0x0fff) | 0x4000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c & 0x3fff) | 0x8000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c >> 4) & 0xffff).toString(16), 4) +\n        zeroPad(d.toString(16), 8));\n    };\n  }());\n  proto.uuid4 = function () {\n    return Random.uuid4(this.engine);\n  };\n\n  Random.string = (function () {\n    // has 2**x chars, for faster uniform distribution\n    var DEFAULT_STRING_POOL = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-\";\n\n    return function (pool) {\n      if (pool == null) {\n        pool = DEFAULT_STRING_POOL;\n      }\n\n      var length = pool.length;\n      if (!length) {\n        throw new Error(\"Expected pool not to be an empty string\");\n      }\n\n      var distribution = Random.integer(0, length - 1);\n      return function (engine, length) {\n        var result = \"\";\n        for (var i = 0; i < length; ++i) {\n          var j = distribution(engine);\n          result += pool.charAt(j);\n        }\n        return result;\n      };\n    };\n  }());\n  proto.string = function (length, pool) {\n    return Random.string(pool)(this.engine, length);\n  };\n\n  Random.hex = (function () {\n    var LOWER_HEX_POOL = \"0123456789abcdef\";\n    var lowerHex = Random.string(LOWER_HEX_POOL);\n    var upperHex = Random.string(LOWER_HEX_POOL.toUpperCase());\n\n    return function (upper) {\n      if (upper) {\n        return upperHex;\n      } else {\n        return lowerHex;\n      }\n    };\n  }());\n  proto.hex = function (length, upper) {\n    return Random.hex(upper)(this.engine, length);\n  };\n\n  Random.date = function (start, end) {\n    if (!(start instanceof Date)) {\n      throw new TypeError(\"Expected start to be a Date, got \" + typeof start);\n    } else if (!(end instanceof Date)) {\n      throw new TypeError(\"Expected end to be a Date, got \" + typeof end);\n    }\n    var distribution = Random.integer(start.getTime(), end.getTime());\n    return function (engine) {\n      return new Date(distribution(engine));\n    };\n  };\n  proto.date = function (start, end) {\n    return Random.date(start, end)(this.engine);\n  };\n\n  if (typeof define === \"function\" && define.amd) {\n    define(function () {\n      return Random;\n    });\n  } else if (typeof module !== \"undefined\" && typeof require === \"function\") {\n    module.exports = Random;\n  } else {\n    (function () {\n      var oldGlobal = root[GLOBAL_KEY];\n      Random.noConflict = function () {\n        root[GLOBAL_KEY] = oldGlobal;\n        return this;\n      };\n    }());\n    root[GLOBAL_KEY] = Random;\n  }\n}(this));","import Random from \"random-js\";\nimport { requestTimeout, requestInterval, clearRequestInterval } from \"./custom.js\";\n\n/**\n * Class that acts as our primary application.\n */\nexport default class App {\n\n    /**\n     * Constructs the application by setting class properties, and properly binding class methods.\n     * \n     * @param {object} config The application configuration.\n     * @param {array} users The list of users among which the TOURNAMENT ARC will occur.\n     * @param {HTMLElement} div The HTML element to attach the application too.\n     */\n    constructor(config, users, div) {\n        //Setup dependencues\n        this._config = config;\n        this._div = div;\n        this._wrapper = this._div.querySelector(\".wrapper\");\n        this._random_engine = Random.engines.mt19937();\n        //Seed the generator with the config value so that everything is repeatable.\n        this._random_engine.seed(this._config.seed);\n        this._random_generator = new Random(this._random_engine);\n\n        //Setup round user data.\n        this._round = [\n            []\n        ];\n        //Randomize the order of the users.\n        while (users.length > 0) {\n            const random_user_index = this._random_generator.integer(0, users.length - 1);\n            this._round[0].push(users[random_user_index]);\n            users.splice(random_user_index, 1);\n        }\n\n        //Set method context bindings.\n        this.start = this.start.bind(this);\n        this.round_0 = this.round_0.bind(this);\n        this.round_x = this.round_x.bind(this);\n        this.determine_winner = this.determine_winner.bind(this);\n        this.finish_round = this.finish_round.bind(this);\n        this.fix_round_participants = this.fix_round_participants.bind(this);\n        this.scroll_element_into_view = this.scroll_element_into_view.bind(this);\n        this.create_group_div = this.create_group_div.bind(this);\n        this.create_participant_div = this.create_participant_div.bind(this);\n    }\n\n    /**\n     * Start running the application.\n     */\n    async start() {\n        this.round_0();\n    }\n\n    /**\n     * Setup round 0 (the round before the tournament starts).\n     */\n    async round_0() {\n        this.fix_round_participants(0);\n\n        //Setup the initial user group.\n        const group_div = this.create_group_div();\n        group_div.classList.remove(\"hide\");\n        group_div.classList.remove(\"right\");\n        this._wrapper.insertAdjacentElement(\"beforeend\", group_div);\n        this._round[0].forEach(user => {\n            group_div.insertAdjacentElement(\"beforeend\", this.create_participant_div(user));\n        });\n\n        requestTimeout(_ => {\n            scrollTo(0, 0);\n\n            //Reveal each user in order one by one.\n            let participant_div_index = 0;\n            const participant_div_list = group_div.querySelectorAll(\".participant.hide\");\n            participant_div_list.forEach(participant_div => {\n                const this_obj = this;\n                participant_div.addEventListener(\"transitionend\", function hide_fn() {\n                    this.removeEventListener(\"transitionend\", hide_fn);\n\n                    participant_div_index++;\n                    if (participant_div_index >= participant_div_list.length) {\n                        //All users in the initial group have been revealed, start round 1.\n                        this_obj.round_x(1);\n                        return;\n                    }\n\n                    this_obj.scroll_element_into_view(participant_div_list[participant_div_index]);\n                    participant_div_list[participant_div_index].classList.remove(\"hide\");\n                });\n            });\n            participant_div_list[participant_div_index].classList.remove(\"hide\");\n        }, 50);\n    }\n\n    /**\n     * Starts the round of the given index.\n     * \n     * @param {int} round_index The round number.\n     */\n    async round_x(round_index) {\n        await this.round_begin_message(round_index);\n\n        //Get the initial participant data and group element.\n        const initial_group_div = this._wrapper.querySelector(\".group\");\n        const initial_participants = this._round[round_index - 1];\n\n        //Setup the group for the new round.\n        this._round[round_index] = [];\n        const winner_group_div = this.create_group_div();\n        this._wrapper.insertAdjacentElement(\"beforeend\", winner_group_div);\n        //This new round will have half of the remaining participants, so setup empty paritipant elements for the winners.\n        for (let participant_index = 0; participant_index < (initial_participants.length / 2); participant_index++) {\n            const participant_div = this.create_participant_div(\"?\");\n            winner_group_div.insertAdjacentElement(\"beforeend\", participant_div);\n        }\n        winner_group_div.classList.remove(\"hide\");\n\n        requestTimeout(_ => {\n            scrollTo(0, 0);\n\n            //Go through each contesting pair and select a winner for that round.\n            const initial_participant_div_list = initial_group_div.querySelectorAll(\".participant\");\n            const winner_participant_div_list = winner_group_div.querySelectorAll(\".participant\");\n            let participant_index = 0;\n            let winner_participant_div_index = 0;\n            winner_participant_div_list.forEach(winner_participant_div => {\n                const this_obj = this;\n                winner_participant_div.addEventListener(\"transitionend\", function show_fn() {\n                    this.removeEventListener(\"transitionend\", show_fn);\n\n                    initial_participant_div_list[participant_index].classList.add(\"active\");\n                    initial_participant_div_list[participant_index + 1].classList.add(\"active\");\n                    winner_participant_div_list[winner_participant_div_index].classList.add(\"unknown\");\n                    this_obj.scroll_element_into_view(winner_participant_div_list[winner_participant_div_index]);\n\n                    if (initial_participants[participant_index + 1] === \"---\") {\n                        //If the second participant is a dummy one, just default to the first participant as a winner.\n                        winner_participant_div_list[winner_participant_div_index].innerText = initial_participants[participant_index];\n                        this_obj._round[round_index].push(initial_participants[participant_index]);\n\n                        winner_participant_div_list[winner_participant_div_index].classList.add(\"winner\");\n                        winner_participant_div_list[winner_participant_div_index].classList.remove(\"unknown\");\n\n                        requestTimeout(_ => {\n                            winner_participant_div_list[winner_participant_div_index].classList.remove(\"winner\");\n                            initial_participant_div_list[participant_index].classList.remove(\"active\");\n                            initial_participant_div_list[participant_index + 1].classList.remove(\"active\");\n\n                            participant_index += 2;\n                            if (participant_index >= initial_participants.length) {\n                                //Clean up the current round.\n                                this_obj.finish_round(round_index);\n                                return;\n                            }\n                        }, 1000);\n                        return;\n                    }\n\n                    //Setup a name switcher that continuously switches between showing each participant name in the winner participant div.\n                    let current_name_index_offset = 0;\n                    const name_switch_interval_handle = requestInterval(_ => {\n                        winner_participant_div_list[winner_participant_div_index].innerText = initial_participants[participant_index + current_name_index_offset];\n                        current_name_index_offset = (current_name_index_offset + 1) % 2;\n                    }, 100);\n\n                    requestTimeout(_ => {\n                        //Determine the winner.\n                        this_obj.determine_winner(initial_participants[participant_index], initial_participants[participant_index + 1]).then(random_index => {\n                            requestTimeout(_ => {\n                                //Stop name switching and set the name of the winner in the winner participant div.\n                                clearRequestInterval(name_switch_interval_handle);\n                                winner_participant_div_list[winner_participant_div_index].innerText = initial_participants[participant_index + random_index];\n                                this_obj._round[round_index].push(initial_participants[participant_index + random_index]);\n\n                                winner_participant_div_list[winner_participant_div_index].classList.add(\"winner\");\n                                winner_participant_div_list[winner_participant_div_index].classList.remove(\"unknown\");\n\n                                requestTimeout(_ => {\n                                    winner_participant_div_list[winner_participant_div_index].classList.remove(\"winner\");\n                                    initial_participant_div_list[participant_index].classList.remove(\"active\");\n                                    initial_participant_div_list[participant_index + 1].classList.remove(\"active\");\n\n                                    participant_index += 2;\n                                    if (participant_index >= initial_participants.length) {\n                                        //Clean up the current round.\n                                        this_obj.finish_round(round_index);\n                                        return;\n                                    }\n\n                                    winner_participant_div_index++;\n                                    winner_participant_div_list[winner_participant_div_index].classList.remove(\"hide\");\n                                }, 500);\n                            }, 750);\n                        });\n                    }, 750);\n                });\n            });\n            winner_participant_div_list[winner_participant_div_index].classList.remove(\"hide\");\n        }, 50);\n    }\n\n    /**\n     * Show a \"round begin\" message.\n     * \n     * @param {int} round_index The round number.\n     */\n    round_begin_message(round_index) {\n        return new Promise((resolve, _) => {\n            const modal_wrapper = this._div.querySelector(\".modal-wrapper\");\n            const modal_header = modal_wrapper.querySelector(\".modal .header\");\n            const modal_text = modal_wrapper.querySelector(\".modal .text\");\n\n            //Create a modal title stating the beginning of the round.\n            const header = document.createElement(\"h2\");\n            header.classList.add(\"title\");\n            header.innerText = `Round ${round_index} Begins!`;\n            modal_header.insertAdjacentElement(\"beforeend\", header);\n\n            //Set a modal text message wishing luck to the participants.\n            modal_text.innerText = \"Best of luck participants!\";\n\n            modal_wrapper.classList.remove(\"hide\");\n\n            requestTimeout(_ => {\n                modal_wrapper.classList.add(\"hide\");\n                header.remove();\n                modal_text.innerText = \"\";\n                resolve(true);\n            }, 2100);\n        });\n    }\n\n    /**\n     * Selects a random participant as the winner, while showing a modal box stating that a winner is being selected.\n     * \n     * @param {string} name_1 The name of the first participant.\n     * @param {string} name_2 The name of the second participant.\n     * \n     * @return A promise to return the selected winner.\n     */\n    determine_winner(name_1, name_2) {\n        return new Promise((resolve, _) => {\n            const modal_wrapper = this._div.querySelector(\".modal-wrapper\");\n            const modal_header = modal_wrapper.querySelector(\".modal .header\");\n            const modal_text = modal_wrapper.querySelector(\".modal .text\");\n\n            //Create two modal titles, one that says the fight is between which participants, one that will announce the winning participant.\n            const header_deciding = document.createElement(\"h2\");\n            header_deciding.classList.add(\"title\");\n            const header_decided = document.createElement(\"h2\");\n            header_decided.classList.add(\"title\");\n            header_decided.classList.add(\"hide\");\n\n            header_deciding.innerText = `${name_1} VS ${name_2}`;\n            modal_header.insertAdjacentElement(\"beforeend\", header_deciding);\n            modal_header.insertAdjacentElement(\"beforeend\", header_decided);\n\n            let dots_count = 1;\n            //Set a modal text message stating the winner is being selected.\n            modal_text.innerText = \"Selecting winner.\";\n\n            //Have a dot style loader to show that the app is working to select a winner.\n            const dot_loading_handle = requestInterval(_ => {\n                dots_count = (dots_count % 4) + 1;\n                //Update the modal text message.\n                modal_text.innerText = `Selecting Winner${new Array(dots_count).join(\".\")}`;\n            }, 300);\n\n            requestTimeout(_ => {\n                //Stop the loader, select a participant at random, and announce the winner.\n                clearRequestInterval(dot_loading_handle);\n                //State in the modal text message that a winner is selected.\n                modal_text.innerText = \"Winner Selected!\";\n\n                const random_index = this._random_generator.integer(0, 1);\n                let name_winner = name_2;\n                if (random_index % 2 === 0) {\n                    name_winner = name_1;\n                }\n                header_decided.innerText = `${name_winner} is the winner!`;\n\n                requestTimeout(_ => {\n                    modal_header.classList.add(\"next\");\n                    header_deciding.classList.add(\"hide\");\n                    header_decided.classList.remove(\"hide\");\n\n                    modal_header.addEventListener(\"transitionend\", function move_fn() {\n                        modal_header.removeEventListener(\"transitionend\", move_fn);\n\n                        requestTimeout(_ => {\n                            //Hide the modal and show the return the selected winner.\n                            modal_wrapper.classList.add(\"hide\");\n                            modal_header.classList.remove(\"next\");\n                            header_deciding.remove();\n                            header_decided.remove();\n                            modal_text.innerText = \"\";\n\n                            resolve(random_index);\n                        }, 2000);\n                    });\n                }, 500);\n            }, 3000);\n\n            modal_wrapper.classList.remove(\"hide\");\n        });\n    }\n\n    /**\n     * Cleans up the current round.\n     * \n     * @param {int} round_index The round number.\n     */\n    async finish_round(round_index) {\n        if (this._round[round_index].length <= 1) {\n            //If only one participant remained after the completion of the current round, end the application and announce the winner.\n            this.end(this._round[round_index][0]);\n            return;\n        }\n\n        const group_div_list = this._wrapper.querySelectorAll(\".group\");\n\n        group_div_list[0].addEventListener(\"transitionend\", function hide_fn() {\n            //When the first group is hidden, delete it and then push the second group to the left.\n            group_div_list[0].removeEventListener(\"transitionend\", hide_fn);\n\n            group_div_list[0].remove();\n            requestTimeout(_ => {\n                group_div_list[1].classList.remove(\"right\");\n            }, 50);\n        });\n\n        const this_obj = this;\n\n        group_div_list[1].addEventListener(\"transitionend\", function move_fn() {\n            //When the second group has been pushed to the left, we can start the next round.\n            group_div_list[1].removeEventListener(\"transitionend\", move_fn);\n\n            const old_participant_size = this_obj._round[round_index].length;\n            this_obj.fix_round_participants(round_index);\n            const new_participant_size = this_obj._round[round_index].length;\n            //If a dummy participant was added, then we should add a participant div for it in the group.\n            if (new_participant_size > old_participant_size) {\n                for (let extra_participant_index = old_participant_size; extra_participant_index < new_participant_size; extra_participant_index++) {\n                    const participant_div = this_obj.create_participant_div(this_obj._round[round_index][extra_participant_index]);\n                    participant_div.classList.remove(\"hide\");\n                    group_div_list[1].insertAdjacentElement(\"beforeend\", participant_div);\n                }\n            }\n\n            requestTimeout(_ => {\n                //Start the next round.\n                this_obj.round_x(round_index + 1);\n            }, 1000);\n        });\n\n        //Hide the old group.\n        group_div_list[0].classList.add(\"hide\");\n    }\n\n    /**\n     * End the application with a modal message stating the winner.\n     * \n     * @param {string} name The name of the winner.\n     */\n    async end(name) {\n        const modal_wrapper = this._div.querySelector(\".modal-wrapper\");\n        const modal_header = modal_wrapper.querySelector(\".modal .header\");\n        const modal_text = modal_wrapper.querySelector(\".modal .text\");\n\n        //Create a modal title announcing the winner\n        const header = document.createElement(\"h2\");\n        header.classList.add(\"title\");\n        header.innerText = `${name} IS THE WINNER!!!`;\n        modal_header.insertAdjacentElement(\"beforeend\", header);\n\n        //Set a modal text message congratulating the winner.\n        modal_text.innerText = \"CONGRATULATIONS!\";\n\n        this._wrapper.classList.add(\"hide\");\n        modal_wrapper.classList.remove(\"hide\");\n    }\n\n    /**\n     * Add a dummy participant if odd number of participants are present.\n     * \n     * @param {int} round_index The round number.\n     */\n    fix_round_participants(round_index) {\n        if (this._round[round_index].length % 2 === 1) {\n            this._round[round_index].push(\"---\");\n        }\n    }\n\n    /**\n     * Smooth scrolls the given element into view.\n     * \n     * @param {HTMLElement} el The element to scroll into view.\n     */\n    async scroll_element_into_view(el) {\n        el.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    /**\n     * Creates a group div element,\n     * \n     * @return The created element.\n     */\n    create_group_div() {\n        const group_div = document.createElement(\"div\");\n        group_div.classList.add(\"group\");\n        group_div.classList.add(\"right\");\n        group_div.classList.add(\"hide\");\n        return group_div;\n    }\n\n    /**\n     * Creates a participant div element with the given participant name.\n     * \n     * @param {string} name The participant name.\n     * \n     * @return The created element.\n     */\n    create_participant_div(name) {\n        const participant_div = document.createElement(\"div\");\n        participant_div.classList.add(\"participant\");\n        participant_div.classList.add(\"hide\");\n        participant_div.innerText = name;\n        return participant_div;\n    }\n}","// requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\nexport const requestAnimFrame = (function() {\n    return window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.oRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function( /* function */ callback, /* DOMElement */ element) {\n            window.setTimeout(callback, 1000 / 60);\n        };\n})();\n\n/**\n * Behaves the same as setTimeout except uses requestAnimationFrame() where possible for better performance\n * @param {function} fn The callback function\n * @param {int} delay The delay in milliseconds\n */\n\nexport const requestTimeout = function(fn, delay) {\n    if (!window.requestAnimationFrame &&\n        !window.webkitRequestAnimationFrame &&\n        !(window.mozRequestAnimationFrame && window.mozCancelRequestAnimationFrame) && // Firefox 5 ships without cancel support\n        !window.oRequestAnimationFrame &&\n        !window.msRequestAnimationFrame)\n        return window.setTimeout(fn, delay);\n\n    var start = performance.now(),\n        handle = new Object();\n\n    function loop() {\n        var current = performance.now(),\n            delta = current - start;\n\n        delta >= delay ? fn.call() : handle.value = requestAnimFrame(loop);\n    };\n\n    handle.value = requestAnimFrame(loop);\n    return handle;\n};\n\n/**\n * Behaves the same as clearTimeout except uses cancelRequestAnimationFrame() where possible for better performance\n * @param {int|object} fn The callback function\n */\nexport const clearRequestTimeout = function(handle) {\n    window.cancelAnimationFrame ? window.cancelAnimationFrame(handle.value) :\n        window.webkitCancelAnimationFrame ? window.webkitCancelAnimationFrame(handle.value) :\n        window.webkitCancelRequestAnimationFrame ? window.webkitCancelRequestAnimationFrame(handle.value) : /* Support for legacy API */\n        window.mozCancelRequestAnimationFrame ? window.mozCancelRequestAnimationFrame(handle.value) :\n        window.oCancelRequestAnimationFrame ? window.oCancelRequestAnimationFrame(handle.value) :\n        window.msCancelRequestAnimationFrame ? window.msCancelRequestAnimationFrame(handle.value) :\n        clearTimeout(handle);\n};\n\n/**\n * Behaves the same as setInterval except uses requestAnimationFrame() where possible for better performance\n * @param {function} fn The callback function\n * @param {int} delay The delay in milliseconds\n */\nexport const requestInterval = function(fn, delay) {\n    if (!window.requestAnimationFrame &&\n        !window.webkitRequestAnimationFrame &&\n        !(window.mozRequestAnimationFrame && window.mozCancelRequestAnimationFrame) && // Firefox 5 ships without cancel support\n        !window.oRequestAnimationFrame &&\n        !window.msRequestAnimationFrame)\n        return window.setInterval(fn, delay);\n\n    var start = performance.now(),\n        handle = new Object();\n\n    function loop() {\n        var current = performance.now(),\n            delta = current - start;\n\n        if (delta >= delay) {\n            fn.call();\n            start = performance.now();\n        }\n\n        handle.value = requestAnimFrame(loop);\n    };\n\n    handle.value = requestAnimFrame(loop);\n    return handle;\n}\n\n/**\n * Behaves the same as clearInterval except uses cancelRequestAnimationFrame() where possible for better performance\n * @param {int|object} fn The callback function\n */\nexport const clearRequestInterval = function(handle) {\n    window.cancelAnimationFrame ? window.cancelAnimationFrame(handle.value) :\n        window.webkitCancelAnimationFrame ? window.webkitCancelAnimationFrame(handle.value) :\n        window.webkitCancelRequestAnimationFrame ? window.webkitCancelRequestAnimationFrame(handle.value) : /* Support for legacy API */\n        window.mozCancelRequestAnimationFrame ? window.mozCancelRequestAnimationFrame(handle.value) :\n        window.oCancelRequestAnimationFrame ? window.oCancelRequestAnimationFrame(handle.value) :\n        window.msCancelRequestAnimationFrame ? window.msCancelRequestAnimationFrame(handle.value) :\n        clearInterval(handle);\n};","import App from \"./App\"\n\nconst handle_json_response = response => response.json();\n\nPromise.all([\n    fetch(\"./config.json\").then(handle_json_response),\n    fetch(\"./users.json\").then(handle_json_response)\n]).then(([config, users]) => {\n    window.app = new App(config, users, document.querySelector(\"#app\"));\n    window.addEventListener(\"load\", _ => app.start());\n});"],"sourceRoot":""}