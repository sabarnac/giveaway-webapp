{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/random-js/lib/random.js","webpack:///./node_modules/offline-plugin/runtime.js","webpack:///./src/custom.js","webpack:///./src/index.js","webpack:///./src/App.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","root","imul","Math","a","b","al","bl","stringRepeat","String","repeat","x","y","pattern","count","result","Random","engine","this","engines","nativeMath","TypeError","proto","returnValue","add","generate","addend","toInteger","number","ceil","floor","convertSliceArgument","length","max","min","returnUndefined","random","mt19937","Int32Array","refreshData","data","k","tmp","index","uses","next","temper","getUseCount","discard","seed","initial","previous","seedWithArray","source","j","sourceLength","autoSeed","generateEntropyArray","Array","browserCrypto","crypto","getRandomValues","array","push","Date","getTime","int32","uint32","uint53","uint53Full","high","int53","int53Full","integer","isPowerOfTwoMinusOne","downscaleToRange","range","masking","bitmask","extendedRange","maximum","downscaleToLoopCheckedRange","upscaleWithinU53","isEvenlyDivisibleByMaxInt32","highRange","upscaleWithHighMasking","ret","upscaleToLoopCheckedRange","upscaleWithinI53AndLoopCheck","isFinite","RangeError","realZeroToOneInclusive","realZeroToOneExclusive","real","left","right","inclusive","multiplier","multiply","bool","isLeastBitTrue","lessThan","numerator","denominator","percentage","scaled","round","probability","pick","begin","end","start","finish","distribution","slice","picker","clone","shuffle","downTo","sample","population","sampleSize","tailLength","die","sideCount","dice","dieCount","uuid4","zeroPad","string","zeroCount","toString","pool","Error","charAt","hex","lowerHex","upperHex","toUpperCase","upper","date","undefined","hasSW","navigator","window","location","protocol","hostname","indexOf","update","serviceWorker","getRegistration","then","registration","setInterval","install","options","register","applyUpdate","callback","errback","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","element","setTimeout","requestTimeout","fn","delay","mozCancelRequestAnimationFrame","performance","now","handle","loop","requestInterval","clearRequestInterval","cancelAnimationFrame","webkitCancelAnimationFrame","webkitCancelRequestAnimationFrame","oCancelRequestAnimationFrame","msCancelRequestAnimationFrame","clearInterval","handle_json_response","response","json","Promise","all","fetch","config","users","app","[object Object]","div","console","log","_config","_div","_wrapper","querySelector","_random_engine","random_default","_random_generator","_round","random_user_index","splice","table","_original_messages","messages","_messages","round_0","show_participants","round_x","begin_round_matches","default_participant_match","participant_match","determine_winner","finish_round","fix_round_participants","pad_participants_list","scroll_element_into_view","create_group_div","create_participant_div","group_div","classList","remove","insertAdjacentElement","forEach","user","_","scrollTo","participant_div_index","participant_div_list","querySelectorAll","participant_div","this_obj","addEventListener","hide_fn","removeEventListener","round_index","round_begin_message","initial_group_div","initial_participants","winner_group_div","participant_index","initial_participant_div_list","winner_participant_div_list","winner_participant_div_index","winner_participant_div","async","show_fn","resolve","modal_wrapper","modal_header","modal_text","header","document","createElement","innerText","current_name_index_offset","name_switch_interval_handle","random_index_offset","name_1","name_2","header_deciding","header_decided","dots_count","dot_loading_handle","join","name_winner","name_loser","_message","random_message","innerHTML","replace","move_fn","group_div_list","old_participant_size","new_participant_size","extra_participant_index","el","scrollIntoView","behavior","block","inline"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/giveaway-webapp/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/*jshint eqnull:true*/\n(function (root) {\n  \"use strict\";\n\n  var GLOBAL_KEY = \"Random\";\n\n  var imul = (typeof Math.imul !== \"function\" || Math.imul(0xffffffff, 5) !== -5 ?\n    function (a, b) {\n      var ah = (a >>> 16) & 0xffff;\n      var al = a & 0xffff;\n      var bh = (b >>> 16) & 0xffff;\n      var bl = b & 0xffff;\n      // the shift by 0 fixes the sign on the high part\n      // the final |0 converts the unsigned value into a signed value\n      return (al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0;\n    } :\n    Math.imul);\n\n  var stringRepeat = (typeof String.prototype.repeat === \"function\" && \"x\".repeat(3) === \"xxx\" ?\n    function (x, y) {\n      return x.repeat(y);\n    } : function (pattern, count) {\n      var result = \"\";\n      while (count > 0) {\n        if (count & 1) {\n          result += pattern;\n        }\n        count >>= 1;\n        pattern += pattern;\n      }\n      return result;\n    });\n\n  function Random(engine) {\n    if (!(this instanceof Random)) {\n      return new Random(engine);\n    }\n\n    if (engine == null) {\n      engine = Random.engines.nativeMath;\n    } else if (typeof engine !== \"function\") {\n      throw new TypeError(\"Expected engine to be a function, got \" + typeof engine);\n    }\n    this.engine = engine;\n  }\n  var proto = Random.prototype;\n\n  Random.engines = {\n    nativeMath: function () {\n      return (Math.random() * 0x100000000) | 0;\n    },\n    mt19937: (function (Int32Array) {\n      // http://en.wikipedia.org/wiki/Mersenne_twister\n      function refreshData(data) {\n        var k = 0;\n        var tmp = 0;\n        for (;\n          (k | 0) < 227; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k + 397) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        for (;\n          (k | 0) < 623; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k - 227) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        tmp = (data[623] & 0x80000000) | (data[0] & 0x7fffffff);\n        data[623] = data[396] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n      }\n\n      function temper(value) {\n        value ^= value >>> 11;\n        value ^= (value << 7) & 0x9d2c5680;\n        value ^= (value << 15) & 0xefc60000;\n        return value ^ (value >>> 18);\n      }\n\n      function seedWithArray(data, source) {\n        var i = 1;\n        var j = 0;\n        var sourceLength = source.length;\n        var k = Math.max(sourceLength, 624) | 0;\n        var previous = data[0] | 0;\n        for (;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x0019660d)) + (source[j] | 0) + (j | 0)) | 0;\n          i = (i + 1) | 0;\n          ++j;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n          if (j >= sourceLength) {\n            j = 0;\n          }\n        }\n        for (k = 623;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x5d588b65)) - i) | 0;\n          i = (i + 1) | 0;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n        }\n        data[0] = 0x80000000;\n      }\n\n      function mt19937() {\n        var data = new Int32Array(624);\n        var index = 0;\n        var uses = 0;\n\n        function next() {\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n\n          var value = data[index];\n          index = (index + 1) | 0;\n          uses += 1;\n          return temper(value) | 0;\n        }\n        next.getUseCount = function() {\n          return uses;\n        };\n        next.discard = function (count) {\n          uses += count;\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n          while ((count - index) > 624) {\n            count -= 624 - index;\n            refreshData(data);\n            index = 0;\n          }\n          index = (index + count) | 0;\n          return next;\n        };\n        next.seed = function (initial) {\n          var previous = 0;\n          data[0] = previous = initial | 0;\n\n          for (var i = 1; i < 624; i = (i + 1) | 0) {\n            data[i] = previous = (imul((previous ^ (previous >>> 30)), 0x6c078965) + i) | 0;\n          }\n          index = 624;\n          uses = 0;\n          return next;\n        };\n        next.seedWithArray = function (source) {\n          next.seed(0x012bd6aa);\n          seedWithArray(data, source);\n          return next;\n        };\n        next.autoSeed = function () {\n          return next.seedWithArray(Random.generateEntropyArray());\n        };\n        return next;\n      }\n\n      return mt19937;\n    }(typeof Int32Array === \"function\" ? Int32Array : Array)),\n    browserCrypto: (typeof crypto !== \"undefined\" && typeof crypto.getRandomValues === \"function\" && typeof Int32Array === \"function\") ? (function () {\n      var data = null;\n      var index = 128;\n\n      return function () {\n        if (index >= 128) {\n          if (data === null) {\n            data = new Int32Array(128);\n          }\n          crypto.getRandomValues(data);\n          index = 0;\n        }\n\n        return data[index++] | 0;\n      };\n    }()) : null\n  };\n\n  Random.generateEntropyArray = function () {\n    var array = [];\n    var engine = Random.engines.nativeMath;\n    for (var i = 0; i < 16; ++i) {\n      array[i] = engine() | 0;\n    }\n    array.push(new Date().getTime() | 0);\n    return array;\n  };\n\n  function returnValue(value) {\n    return function () {\n      return value;\n    };\n  }\n\n  // [-0x80000000, 0x7fffffff]\n  Random.int32 = function (engine) {\n    return engine() | 0;\n  };\n  proto.int32 = function () {\n    return Random.int32(this.engine);\n  };\n\n  // [0, 0xffffffff]\n  Random.uint32 = function (engine) {\n    return engine() >>> 0;\n  };\n  proto.uint32 = function () {\n    return Random.uint32(this.engine);\n  };\n\n  // [0, 0x1fffffffffffff]\n  Random.uint53 = function (engine) {\n    var high = engine() & 0x1fffff;\n    var low = engine() >>> 0;\n    return (high * 0x100000000) + low;\n  };\n  proto.uint53 = function () {\n    return Random.uint53(this.engine);\n  };\n\n  // [0, 0x20000000000000]\n  Random.uint53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x200000) {\n        if ((high & 0x3fffff) === 0x200000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low;\n      }\n    }\n  };\n  proto.uint53Full = function () {\n    return Random.uint53Full(this.engine);\n  };\n\n  // [-0x20000000000000, 0x1fffffffffffff]\n  Random.int53 = function (engine) {\n    var high = engine() | 0;\n    var low = engine() >>> 0;\n    return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n  };\n  proto.int53 = function () {\n    return Random.int53(this.engine);\n  };\n\n  // [-0x20000000000000, 0x20000000000000]\n  Random.int53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x400000) {\n        if ((high & 0x7fffff) === 0x400000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n      }\n    }\n  };\n  proto.int53Full = function () {\n    return Random.int53Full(this.engine);\n  };\n\n  function add(generate, addend) {\n    if (addend === 0) {\n      return generate;\n    } else {\n      return function (engine) {\n        return generate(engine) + addend;\n      };\n    }\n  }\n\n  Random.integer = (function () {\n    function isPowerOfTwoMinusOne(value) {\n      return ((value + 1) & value) === 0;\n    }\n\n    function bitmask(masking) {\n      return function (engine) {\n        return engine() & masking;\n      };\n    }\n\n    function downscaleToLoopCheckedRange(range) {\n      var extendedRange = range + 1;\n      var maximum = extendedRange * Math.floor(0x100000000 / extendedRange);\n      return function (engine) {\n        var value = 0;\n        do {\n          value = engine() >>> 0;\n        } while (value >= maximum);\n        return value % extendedRange;\n      };\n    }\n\n    function downscaleToRange(range) {\n      if (isPowerOfTwoMinusOne(range)) {\n        return bitmask(range);\n      } else {\n        return downscaleToLoopCheckedRange(range);\n      }\n    }\n\n    function isEvenlyDivisibleByMaxInt32(value) {\n      return (value | 0) === 0;\n    }\n\n    function upscaleWithHighMasking(masking) {\n      return function (engine) {\n        var high = engine() & masking;\n        var low = engine() >>> 0;\n        return (high * 0x100000000) + low;\n      };\n    }\n\n    function upscaleToLoopCheckedRange(extendedRange) {\n      var maximum = extendedRange * Math.floor(0x20000000000000 / extendedRange);\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() & 0x1fffff;\n          var low = engine() >>> 0;\n          ret = (high * 0x100000000) + low;\n        } while (ret >= maximum);\n        return ret % extendedRange;\n      };\n    }\n\n    function upscaleWithinU53(range) {\n      var extendedRange = range + 1;\n      if (isEvenlyDivisibleByMaxInt32(extendedRange)) {\n        var highRange = ((extendedRange / 0x100000000) | 0) - 1;\n        if (isPowerOfTwoMinusOne(highRange)) {\n          return upscaleWithHighMasking(highRange);\n        }\n      }\n      return upscaleToLoopCheckedRange(extendedRange);\n    }\n\n    function upscaleWithinI53AndLoopCheck(min, max) {\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() | 0;\n          var low = engine() >>> 0;\n          ret = ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n        } while (ret < min || ret > max);\n        return ret;\n      };\n    }\n\n    return function (min, max) {\n      min = Math.floor(min);\n      max = Math.floor(max);\n      if (min < -0x20000000000000 || !isFinite(min)) {\n        throw new RangeError(\"Expected min to be at least \" + (-0x20000000000000));\n      } else if (max > 0x20000000000000 || !isFinite(max)) {\n        throw new RangeError(\"Expected max to be at most \" + 0x20000000000000);\n      }\n\n      var range = max - min;\n      if (range <= 0 || !isFinite(range)) {\n        return returnValue(min);\n      } else if (range === 0xffffffff) {\n        if (min === 0) {\n          return Random.uint32;\n        } else {\n          return add(Random.int32, min + 0x80000000);\n        }\n      } else if (range < 0xffffffff) {\n        return add(downscaleToRange(range), min);\n      } else if (range === 0x1fffffffffffff) {\n        return add(Random.uint53, min);\n      } else if (range < 0x1fffffffffffff) {\n        return add(upscaleWithinU53(range), min);\n      } else if (max - 1 - min === 0x1fffffffffffff) {\n        return add(Random.uint53Full, min);\n      } else if (min === -0x20000000000000 && max === 0x20000000000000) {\n        return Random.int53Full;\n      } else if (min === -0x20000000000000 && max === 0x1fffffffffffff) {\n        return Random.int53;\n      } else if (min === -0x1fffffffffffff && max === 0x20000000000000) {\n        return add(Random.int53, 1);\n      } else if (max === 0x20000000000000) {\n        return add(upscaleWithinI53AndLoopCheck(min - 1, max - 1), 1);\n      } else {\n        return upscaleWithinI53AndLoopCheck(min, max);\n      }\n    };\n  }());\n  proto.integer = function (min, max) {\n    return Random.integer(min, max)(this.engine);\n  };\n\n  // [0, 1] (floating point)\n  Random.realZeroToOneInclusive = function (engine) {\n    return Random.uint53Full(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneInclusive = function () {\n    return Random.realZeroToOneInclusive(this.engine);\n  };\n\n  // [0, 1) (floating point)\n  Random.realZeroToOneExclusive = function (engine) {\n    return Random.uint53(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneExclusive = function () {\n    return Random.realZeroToOneExclusive(this.engine);\n  };\n\n  Random.real = (function () {\n    function multiply(generate, multiplier) {\n      if (multiplier === 1) {\n        return generate;\n      } else if (multiplier === 0) {\n        return function () {\n          return 0;\n        };\n      } else {\n        return function (engine) {\n          return generate(engine) * multiplier;\n        };\n      }\n    }\n\n    return function (left, right, inclusive) {\n      if (!isFinite(left)) {\n        throw new RangeError(\"Expected left to be a finite number\");\n      } else if (!isFinite(right)) {\n        throw new RangeError(\"Expected right to be a finite number\");\n      }\n      return add(\n        multiply(\n          inclusive ? Random.realZeroToOneInclusive : Random.realZeroToOneExclusive,\n          right - left),\n        left);\n    };\n  }());\n  proto.real = function (min, max, inclusive) {\n    return Random.real(min, max, inclusive)(this.engine);\n  };\n\n  Random.bool = (function () {\n    function isLeastBitTrue(engine) {\n      return (engine() & 1) === 1;\n    }\n\n    function lessThan(generate, value) {\n      return function (engine) {\n        return generate(engine) < value;\n      };\n    }\n\n    function probability(percentage) {\n      if (percentage <= 0) {\n        return returnValue(false);\n      } else if (percentage >= 1) {\n        return returnValue(true);\n      } else {\n        var scaled = percentage * 0x100000000;\n        if (scaled % 1 === 0) {\n          return lessThan(Random.int32, (scaled - 0x80000000) | 0);\n        } else {\n          return lessThan(Random.uint53, Math.round(percentage * 0x20000000000000));\n        }\n      }\n    }\n\n    return function (numerator, denominator) {\n      if (denominator == null) {\n        if (numerator == null) {\n          return isLeastBitTrue;\n        }\n        return probability(numerator);\n      } else {\n        if (numerator <= 0) {\n          return returnValue(false);\n        } else if (numerator >= denominator) {\n          return returnValue(true);\n        }\n        return lessThan(Random.integer(0, denominator - 1), numerator);\n      }\n    };\n  }());\n  proto.bool = function (numerator, denominator) {\n    return Random.bool(numerator, denominator)(this.engine);\n  };\n\n  function toInteger(value) {\n    var number = +value;\n    if (number < 0) {\n      return Math.ceil(number);\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function convertSliceArgument(value, length) {\n    if (value < 0) {\n      return Math.max(value + length, 0);\n    } else {\n      return Math.min(value, length);\n    }\n  }\n  Random.pick = function (engine, array, begin, end) {\n    var length = array.length;\n    var start = begin == null ? 0 : convertSliceArgument(toInteger(begin), length);\n    var finish = end === void 0 ? length : convertSliceArgument(toInteger(end), length);\n    if (start >= finish) {\n      return void 0;\n    }\n    var distribution = Random.integer(start, finish - 1);\n    return array[distribution(engine)];\n  };\n  proto.pick = function (array, begin, end) {\n    return Random.pick(this.engine, array, begin, end);\n  };\n\n  function returnUndefined() {\n    return void 0;\n  }\n  var slice = Array.prototype.slice;\n  Random.picker = function (array, begin, end) {\n    var clone = slice.call(array, begin, end);\n    if (!clone.length) {\n      return returnUndefined;\n    }\n    var distribution = Random.integer(0, clone.length - 1);\n    return function (engine) {\n      return clone[distribution(engine)];\n    };\n  };\n\n  Random.shuffle = function (engine, array, downTo) {\n    var length = array.length;\n    if (length) {\n      if (downTo == null) {\n        downTo = 0;\n      }\n      for (var i = (length - 1) >>> 0; i > downTo; --i) {\n        var distribution = Random.integer(0, i);\n        var j = distribution(engine);\n        if (i !== j) {\n          var tmp = array[i];\n          array[i] = array[j];\n          array[j] = tmp;\n        }\n      }\n    }\n    return array;\n  };\n  proto.shuffle = function (array) {\n    return Random.shuffle(this.engine, array);\n  };\n\n  Random.sample = function (engine, population, sampleSize) {\n    if (sampleSize < 0 || sampleSize > population.length || !isFinite(sampleSize)) {\n      throw new RangeError(\"Expected sampleSize to be within 0 and the length of the population\");\n    }\n\n    if (sampleSize === 0) {\n      return [];\n    }\n\n    var clone = slice.call(population);\n    var length = clone.length;\n    if (length === sampleSize) {\n      return Random.shuffle(engine, clone, 0);\n    }\n    var tailLength = length - sampleSize;\n    return Random.shuffle(engine, clone, tailLength - 1).slice(tailLength);\n  };\n  proto.sample = function (population, sampleSize) {\n    return Random.sample(this.engine, population, sampleSize);\n  };\n\n  Random.die = function (sideCount) {\n    return Random.integer(1, sideCount);\n  };\n  proto.die = function (sideCount) {\n    return Random.die(sideCount)(this.engine);\n  };\n\n  Random.dice = function (sideCount, dieCount) {\n    var distribution = Random.die(sideCount);\n    return function (engine) {\n      var result = [];\n      result.length = dieCount;\n      for (var i = 0; i < dieCount; ++i) {\n        result[i] = distribution(engine);\n      }\n      return result;\n    };\n  };\n  proto.dice = function (sideCount, dieCount) {\n    return Random.dice(sideCount, dieCount)(this.engine);\n  };\n\n  // http://en.wikipedia.org/wiki/Universally_unique_identifier\n  Random.uuid4 = (function () {\n    function zeroPad(string, zeroCount) {\n      return stringRepeat(\"0\", zeroCount - string.length) + string;\n    }\n\n    return function (engine) {\n      var a = engine() >>> 0;\n      var b = engine() | 0;\n      var c = engine() | 0;\n      var d = engine() >>> 0;\n\n      return (\n        zeroPad(a.toString(16), 8) +\n        \"-\" +\n        zeroPad((b & 0xffff).toString(16), 4) +\n        \"-\" +\n        zeroPad((((b >> 4) & 0x0fff) | 0x4000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c & 0x3fff) | 0x8000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c >> 4) & 0xffff).toString(16), 4) +\n        zeroPad(d.toString(16), 8));\n    };\n  }());\n  proto.uuid4 = function () {\n    return Random.uuid4(this.engine);\n  };\n\n  Random.string = (function () {\n    // has 2**x chars, for faster uniform distribution\n    var DEFAULT_STRING_POOL = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-\";\n\n    return function (pool) {\n      if (pool == null) {\n        pool = DEFAULT_STRING_POOL;\n      }\n\n      var length = pool.length;\n      if (!length) {\n        throw new Error(\"Expected pool not to be an empty string\");\n      }\n\n      var distribution = Random.integer(0, length - 1);\n      return function (engine, length) {\n        var result = \"\";\n        for (var i = 0; i < length; ++i) {\n          var j = distribution(engine);\n          result += pool.charAt(j);\n        }\n        return result;\n      };\n    };\n  }());\n  proto.string = function (length, pool) {\n    return Random.string(pool)(this.engine, length);\n  };\n\n  Random.hex = (function () {\n    var LOWER_HEX_POOL = \"0123456789abcdef\";\n    var lowerHex = Random.string(LOWER_HEX_POOL);\n    var upperHex = Random.string(LOWER_HEX_POOL.toUpperCase());\n\n    return function (upper) {\n      if (upper) {\n        return upperHex;\n      } else {\n        return lowerHex;\n      }\n    };\n  }());\n  proto.hex = function (length, upper) {\n    return Random.hex(upper)(this.engine, length);\n  };\n\n  Random.date = function (start, end) {\n    if (!(start instanceof Date)) {\n      throw new TypeError(\"Expected start to be a Date, got \" + typeof start);\n    } else if (!(end instanceof Date)) {\n      throw new TypeError(\"Expected end to be a Date, got \" + typeof end);\n    }\n    var distribution = Random.integer(start.getTime(), end.getTime());\n    return function (engine) {\n      return new Date(distribution(engine));\n    };\n  };\n  proto.date = function (start, end) {\n    return Random.date(start, end)(this.engine);\n  };\n\n  if (typeof define === \"function\" && define.amd) {\n    define(function () {\n      return Random;\n    });\n  } else if (typeof module !== \"undefined\" && typeof require === \"function\") {\n    module.exports = Random;\n  } else {\n    (function () {\n      var oldGlobal = root[GLOBAL_KEY];\n      Random.noConflict = function () {\n        root[GLOBAL_KEY] = oldGlobal;\n        return this;\n      };\n    }());\n    root[GLOBAL_KEY] = Random;\n  }\n}(this));","var appCacheIframe;\n\nfunction hasSW() {\n  \n    return 'serviceWorker' in navigator && (\n      window.location.protocol === 'https:' ||\n      window.location.hostname === 'localhost' ||\n      window.location.hostname.indexOf('127.') === 0\n    );\n  \n}\n\nfunction install(options) {\n  options || (options = {});\n\n  \n    if (hasSW()) {\n      var registration = navigator.serviceWorker\n        .register(\n          \"/giveaway-webapp/sw.js\", {\n            \n            \n          }\n        );\n\n      \n\n      return;\n    }\n  \n\n  \n}\n\nfunction applyUpdate(callback, errback) {\n  \n\n  \n}\n\nfunction update() {\n  \n    if (hasSW()) {\n      navigator.serviceWorker.getRegistration().then(function(registration) {\n        if (!registration) return;\n        return registration.update();\n      });\n    }\n  \n\n  \n}\n\n\n  setInterval(update, 3600000);\n\n\nexports.install = install;\nexports.applyUpdate = applyUpdate;\nexports.update = update;\n","\"use strict\";\n\n// requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\nexport const requestAnimFrame = (function() {\n    return window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.oRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function( /* function */ callback, /* DOMElement */ element) {\n            window.setTimeout(callback, 1000 / 60);\n        };\n})();\n\n/**\n * Behaves the same as setTimeout except uses requestAnimationFrame() where possible for better performance\n * @param {function} fn The callback function\n * @param {int} delay The delay in milliseconds\n */\n\nexport const requestTimeout = function(fn, delay) {\n    if (!window.requestAnimationFrame &&\n        !window.webkitRequestAnimationFrame &&\n        !(window.mozRequestAnimationFrame && window.mozCancelRequestAnimationFrame) && // Firefox 5 ships without cancel support\n        !window.oRequestAnimationFrame &&\n        !window.msRequestAnimationFrame)\n        return window.setTimeout(fn, delay);\n\n    var start = performance.now(),\n        handle = new Object();\n\n    function loop() {\n        var current = performance.now(),\n            delta = current - start;\n\n        delta >= delay ? fn.call() : handle.value = requestAnimFrame(loop);\n    };\n\n    handle.value = requestAnimFrame(loop);\n    return handle;\n};\n\n/**\n * Behaves the same as clearTimeout except uses cancelRequestAnimationFrame() where possible for better performance\n * @param {int|object} fn The callback function\n */\nexport const clearRequestTimeout = function(handle) {\n    window.cancelAnimationFrame ? window.cancelAnimationFrame(handle.value) :\n        window.webkitCancelAnimationFrame ? window.webkitCancelAnimationFrame(handle.value) :\n        window.webkitCancelRequestAnimationFrame ? window.webkitCancelRequestAnimationFrame(handle.value) : /* Support for legacy API */\n        window.mozCancelRequestAnimationFrame ? window.mozCancelRequestAnimationFrame(handle.value) :\n        window.oCancelRequestAnimationFrame ? window.oCancelRequestAnimationFrame(handle.value) :\n        window.msCancelRequestAnimationFrame ? window.msCancelRequestAnimationFrame(handle.value) :\n        clearTimeout(handle);\n};\n\n/**\n * Behaves the same as setInterval except uses requestAnimationFrame() where possible for better performance\n * @param {function} fn The callback function\n * @param {int} delay The delay in milliseconds\n */\nexport const requestInterval = function(fn, delay) {\n    if (!window.requestAnimationFrame &&\n        !window.webkitRequestAnimationFrame &&\n        !(window.mozRequestAnimationFrame && window.mozCancelRequestAnimationFrame) && // Firefox 5 ships without cancel support\n        !window.oRequestAnimationFrame &&\n        !window.msRequestAnimationFrame)\n        return window.setInterval(fn, delay);\n\n    var start = performance.now(),\n        handle = new Object();\n\n    function loop() {\n        var current = performance.now(),\n            delta = current - start;\n\n        if (delta >= delay) {\n            fn.call();\n            start = performance.now();\n        }\n\n        handle.value = requestAnimFrame(loop);\n    };\n\n    handle.value = requestAnimFrame(loop);\n    return handle;\n}\n\n/**\n * Behaves the same as clearInterval except uses cancelRequestAnimationFrame() where possible for better performance\n * @param {int|object} fn The callback function\n */\nexport const clearRequestInterval = function(handle) {\n    window.cancelAnimationFrame ? window.cancelAnimationFrame(handle.value) :\n        window.webkitCancelAnimationFrame ? window.webkitCancelAnimationFrame(handle.value) :\n        window.webkitCancelRequestAnimationFrame ? window.webkitCancelRequestAnimationFrame(handle.value) : /* Support for legacy API */\n        window.mozCancelRequestAnimationFrame ? window.mozCancelRequestAnimationFrame(handle.value) :\n        window.oCancelRequestAnimationFrame ? window.oCancelRequestAnimationFrame(handle.value) :\n        window.msCancelRequestAnimationFrame ? window.msCancelRequestAnimationFrame(handle.value) :\n        clearInterval(handle);\n};","\"use strict\";\n\nimport App from \"./App\";\nimport * as OfflinePluginRuntime from 'offline-plugin/runtime';\n\nOfflinePluginRuntime.install();\n\nconst handle_json_response = response => response.json();\n\nPromise.all([\n    fetch(\"./config.json\").then(handle_json_response),\n    fetch(\"./users.json\").then(handle_json_response)\n]).then(([config, users]) => {\n    window.app = new App(config, users, document.querySelector(\"#app\"));\n    setTimeout(_ => app.start(), 500);\n});","\"use strict\";\n\nimport Random from \"random-js\";\nimport { requestTimeout, requestInterval, clearRequestInterval } from \"./custom.js\";\n\n/**\n * Class that acts as our primary application.\n */\nexport default class App {\n\n    /**\n     * Constructs the application by setting class properties, and properly binding class methods.\n     * \n     * @param {object} config The application configuration.\n     * @param {array} users The list of users among which the tournament will occur.\n     * @param {HTMLElement} div The HTML element to attach the application too.\n     */\n    constructor(config, users, div) {\n        console.log(\"Constructing application.\");\n\n        //Setup dependencues\n        console.log(\"Setting up dependencies.\");\n        this._config = config;\n        this._div = div;\n        this._wrapper = this._div.querySelector(\".wrapper\");\n        this._random_engine = Random.engines.mt19937();\n        //Seed the generator with the config value so that everything is repeatable.\n        console.log(`Seed: ${this._config.seed}`);\n        this._random_engine.seed(this._config.seed);\n        this._random_generator = new Random(this._random_engine);\n        console.log(\"Dependencies setup complete.\");\n\n        //Setup round user data.\n        console.log(\"Setting up data.\");\n        this._round = [\n            []\n        ];\n        //Randomize the order of the users.\n        while (users.length > 0) {\n            const random_user_index = this._random_generator.integer(0, users.length - 1);\n            this._round[0].push(users[random_user_index]);\n            users.splice(random_user_index, 1);\n        }\n        console.log(\"Users: \");\n        console.table(this._round[0]);\n        this._original_messages = this._config.messages;\n        console.log(\"Messages: \");\n        console.table(this._config.messages);\n        this._messages = [...this._original_messages];\n        console.log(\"Data setup complete.\");\n\n        //Set method context bindings.\n        console.log(\"Setting up method context bindings.\");\n        this.start = this.start.bind(this);\n        this.round_0 = this.round_0.bind(this);\n        this.show_participants = this.show_participants.bind(this);\n        this.round_x = this.round_x.bind(this);\n        this.begin_round_matches = this.begin_round_matches.bind(this);\n        this.default_participant_match = this.default_participant_match.bind(this);\n        this.participant_match = this.participant_match.bind(this);\n        this.determine_winner = this.determine_winner.bind(this);\n        this.finish_round = this.finish_round.bind(this);\n        this.fix_round_participants = this.pad_participants_list.bind(this);\n        this.scroll_element_into_view = this.scroll_element_into_view.bind(this);\n        this.create_group_div = this.create_group_div.bind(this);\n        this.create_participant_div = this.create_participant_div.bind(this);\n        console.log(\"Method context bindings setup complete.\");\n    }\n\n    /**\n     * Start running the application.\n     */\n    async start() {\n        console.log(\"Starting the tournament!!!\");\n        this.round_0();\n    }\n\n    /**\n     * Setup round 0 (the round before the tournament starts).\n     */\n    async round_0() {\n        console.log(\"Starting Round 0\");\n\n        console.log(\"Padding participants list.\");\n        this.pad_participants_list(0);\n        console.log(\"Padded participants list.\");\n\n        //Setup the initial user group.\n        console.log(\"Creating initial participants group.\");\n        const group_div = this.create_group_div();\n        group_div.classList.remove(\"hide\");\n        group_div.classList.remove(\"right\");\n        this._wrapper.insertAdjacentElement(\"beforeend\", group_div);\n        this._round[0].forEach(user => {\n            console.log(`Adding participant: ${user}`);\n            group_div.insertAdjacentElement(\"beforeend\", this.create_participant_div(user));\n            console.log(\"Added participant.\");\n        });\n        console.log(\"Created initial participants group.\");\n\n        requestTimeout(_ => {\n            this.show_participants(group_div);\n        }, 50);\n    }\n\n    /**\n     * Shows each participant in the group one by one.\n     * \n     * @param {HTMLElement} group_div The round group element.\n     */\n    show_participants(group_div) {\n        console.log(\"Showing initial participants group list.\");\n        scrollTo(0, 0);\n\n        //Reveal each user in order one by one.\n        let participant_div_index = 0;\n        const participant_div_list = group_div.querySelectorAll(\".participant.hide\");\n        participant_div_list.forEach(participant_div => {\n            const this_obj = this;\n            participant_div.addEventListener(\"transitionend\", function hide_fn() {\n                this.removeEventListener(\"transitionend\", hide_fn);\n\n                participant_div_index++;\n                if (participant_div_index >= participant_div_list.length) {\n                    //All users in the initial group have been revealed, start round 1.\n                    console.log(\"All participants visible.\");\n                    this_obj.round_x(1);\n                    return;\n                }\n\n                console.log(`Showing participant, (Index: ${participant_div_index})`);\n                this_obj.scroll_element_into_view(participant_div_list[participant_div_index]);\n                participant_div_list[participant_div_index].classList.remove(\"hide\");\n            });\n        });\n        participant_div_list[participant_div_index].classList.remove(\"hide\");\n    }\n\n    /**\n     * Starts the round of the given index.\n     * \n     * @param {number} round_index The round number.\n     */\n    async round_x(round_index) {\n        console.log(`Starting Round ${round_index}.`);\n        await this.round_begin_message(round_index);\n\n        //Get the initial participant data and group element.\n        console.log(`Retrieving initial participants list from Round ${round_index - 1}.`);\n        const initial_group_div = this._wrapper.querySelector(\".group\");\n        const initial_participants = this._round[round_index - 1];\n        console.log(`Retrieved initial participants list from Round ${round_index - 1}.`);\n\n        //Setup the group for the new round.\n        console.log(`Setting up for winners of Round ${round_index}.`);\n        this._round[round_index] = [];\n        const winner_group_div = this.create_group_div();\n        this._wrapper.insertAdjacentElement(\"beforeend\", winner_group_div);\n        //This new round will have half of the remaining participants, so setup empty paritipant elements for the winners.\n        for (let participant_index = 0; participant_index < (initial_participants.length / 2); participant_index++) {\n            console.log(`Setting up block for potential winner. (Index: ${participant_index})`);\n            const participant_div = this.create_participant_div(\"?\");\n            winner_group_div.insertAdjacentElement(\"beforeend\", participant_div);\n            console.log(`Setup block for potential winner complete.`);\n        }\n        winner_group_div.classList.remove(\"hide\");\n        console.log(`Setup for winners of Round ${round_index} complete.`);\n\n        requestTimeout(_ => {\n            this.begin_round_matches(round_index, initial_group_div, winner_group_div, initial_participants);\n        }, 50);\n    }\n\n    /**\n     * Start the matches in the round.\n     * \n     * @param {HTMLElement} initial_group_div The initial participant round group element.\n     * @param {HTMLElement} winner_group_div The winner round group element.\n     */\n    async begin_round_matches(round_index, initial_group_div, winner_group_div, initial_participants) {\n        console.log(`Starting matches for Round ${round_index}.`);\n\n        scrollTo(0, 0);\n\n        //Go through each contesting pair and select a winner for that round.\n        console.log(\"Retrieving initial particpant and final participant div lists.\");\n        const initial_participant_div_list = initial_group_div.querySelectorAll(\".participant\");\n        const winner_participant_div_list = winner_group_div.querySelectorAll(\".participant\");\n        let participant_index = 0;\n        let winner_participant_div_index = 0;\n        winner_participant_div_list.forEach(winner_participant_div => {\n            const this_obj = this;\n            console.log(\"When each winner participant div is being shown, start the selection of the random winner while playing some animations with the div.\");\n            winner_participant_div.addEventListener(\"transitionend\", async function show_fn() {\n                this.removeEventListener(\"transitionend\", show_fn);\n\n                initial_participant_div_list[participant_index].classList.add(\"active\");\n                initial_participant_div_list[participant_index + 1].classList.add(\"active\");\n                winner_participant_div_list[winner_participant_div_index].classList.add(\"unknown\");\n                this_obj.scroll_element_into_view(winner_participant_div_list[winner_participant_div_index]);\n\n                if (initial_participants[participant_index + 1] === \"---\") {\n                    //If the second participant is a dummy one, just default to the first participant as a winner.\n                    console.log(\"One of the participants is a dummy. Selecting the only actual participant as the default winner.\");\n                    this_obj.default_participant_match(round_index, winner_participant_div_list, winner_participant_div_index, initial_participant_div_list, initial_participants, participant_index);\n                    return;\n                }\n\n                console.log(\"Start the match between the two participants.\");\n                await this_obj.participant_match(round_index, winner_participant_div_list, winner_participant_div_index, initial_participant_div_list, initial_participants, participant_index);\n\n                participant_index += 2;\n                if (participant_index >= initial_participants.length) {\n                    //Clean up the current round.\n                    console.log(`All matches in Round ${round_index} are complete.`);\n                    this_obj.finish_round(round_index);\n                    return;\n                }\n\n                winner_participant_div_index++;\n                console.log(`Showing the next participant div. (Index: ${winner_participant_div_index})`);\n                winner_participant_div_list[winner_participant_div_index].classList.remove(\"hide\");\n            });\n        });\n        console.log(`Showing the participant div. (Index: ${winner_participant_div_index})`);\n        winner_participant_div_list[winner_participant_div_index].classList.remove(\"hide\");\n    }\n\n    /**\n     * Show a \"round begin\" message.\n     * \n     * @param {number} round_index The round number.\n     */\n    round_begin_message(round_index) {\n        return new Promise((resolve, _) => {\n            console.log(`Show a message stating Round ${round_index} is gonna begin.`);\n\n            const modal_wrapper = this._div.querySelector(\".modal-wrapper\");\n            const modal_header = modal_wrapper.querySelector(\".modal .header\");\n            const modal_text = modal_wrapper.querySelector(\".modal .text\");\n\n            //Create a modal title stating the beginning of the round.\n            const header = document.createElement(\"h2\");\n            header.classList.add(\"title\");\n            header.innerText = `Round ${round_index} Begins!`;\n            modal_header.insertAdjacentElement(\"beforeend\", header);\n\n            //Set a modal text message wishing luck to the participants.\n            modal_text.innerText = \"Best of luck participants!\";\n\n            modal_wrapper.classList.remove(\"hide\");\n\n            requestTimeout(_ => {\n                modal_wrapper.classList.add(\"hide\");\n                header.remove();\n                modal_text.innerText = \"\";\n                console.log(\"Begin round message is shown. We can now start the round.\");\n                resolve(true);\n            }, 2500);\n        });\n    }\n\n    /**\n     * Starts a match between two participants.\n     * \n     * @param {number} round_index The round number.\n     * @param {HTMLElement[]} winner_participant_div_list The winner participant elements list.\n     * @param {number} winner_participant_div_index The current winner participant elements list index.\n     * @param {HTMLElement[]} initial_participant_div_list The initial participant elements list.\n     * @param {number} initial_participants The current initial participant elements list index.\n     * @param {number} participant_index The current participant index.\n     */\n    participant_match(round_index, winner_participant_div_list, winner_participant_div_index, initial_participant_div_list, initial_participants, participant_index) {\n        return new Promise((resolve, _) => {\n            console.log(`Starting participant match in Round ${round_index}. (Participant index: ${participant_index})`);\n\n            //Setup a name switcher that continuously switches between showing each participant name in the winner participant div.\n            let current_name_index_offset = 0;\n            console.log(\"Setting up a name switcher.\");\n            const name_switch_interval_handle = requestInterval(_ => {\n                winner_participant_div_list[winner_participant_div_index].innerText = initial_participants[participant_index + current_name_index_offset];\n                current_name_index_offset = (current_name_index_offset + 1) % 2;\n            }, 100);\n\n            requestTimeout(_ => {\n                //Determine the winner.\n                console.log(\"Get a randomly selected winner.\");\n                this.determine_winner(initial_participants[participant_index], initial_participants[participant_index + 1]).then(random_index_offset => {\n                    requestTimeout(_ => {\n                        console.log(`Show the winner name in the winner participant div. (Participant index offset: ${random_index_offset})`);\n                        //Stop name switching and set the name of the winner in the winner participant div.\n                        clearRequestInterval(name_switch_interval_handle);\n                        winner_participant_div_list[winner_participant_div_index].innerText = initial_participants[participant_index + random_index_offset];\n                        this._round[round_index].push(initial_participants[participant_index + random_index_offset]);\n\n                        winner_participant_div_list[winner_participant_div_index].classList.add(\"winner\");\n                        winner_participant_div_list[winner_participant_div_index].classList.remove(\"unknown\");\n\n                        requestTimeout(_ => {\n                            winner_participant_div_list[winner_participant_div_index].classList.remove(\"winner\");\n                            initial_participant_div_list[participant_index].classList.remove(\"active\");\n                            initial_participant_div_list[participant_index + 1].classList.remove(\"active\");\n\n                            console.log(`Match is complete. The winner is: ${winner_participant_div_list[winner_participant_div_index].innerText}`);\n                            resolve(true);\n                        }, 500);\n                    }, 750);\n                });\n            }, 750);\n        });\n    }\n\n    /**\n     * Starts a match with a default participant winner.\n     * \n     * @param {number} round_index The round number.\n     * @param {HTMLElement[]} winner_participant_div_list The winner participant elements list.\n     * @param {number} winner_participant_div_index The current winner participant elements list index.\n     * @param {HTMLElement[]} initial_participant_div_list The initial participant elements list.\n     * @param {number} initial_participants The current initial participant elements list index.\n     * @param {number} participant_index The current participant index.\n     */\n    async default_participant_match(round_index, winner_participant_div_list, winner_participant_div_index, initial_participant_div_list, initial_participants, participant_index) {\n        console.log(`Only one actual participant in the list. Selecting that participant as the winner by default. (Index: ${participant_index})`);\n\n        //Set the participant as the default winner.\n        winner_participant_div_list[winner_participant_div_index].innerText = initial_participants[participant_index];\n        this._round[round_index].push(initial_participants[participant_index]);\n\n        winner_participant_div_list[winner_participant_div_index].classList.add(\"winner\");\n        winner_participant_div_list[winner_participant_div_index].classList.remove(\"unknown\");\n\n        requestTimeout(_ => {\n            winner_participant_div_list[winner_participant_div_index].classList.remove(\"winner\");\n            initial_participant_div_list[participant_index].classList.remove(\"active\");\n            initial_participant_div_list[participant_index + 1].classList.remove(\"active\");\n\n            //Clean up the current round.\n            console.log(`Round ${round_index} is complete.`);\n            this.finish_round(round_index);\n        }, 1000);\n    }\n\n    /**\n     * Selects a random participant as the winner, while showing a modal box stating that a winner is being selected.\n     * \n     * @param {string} name_1 The name of the first participant.\n     * @param {string} name_2 The name of the second participant.\n     * \n     * @return A promise to return the selected winner.\n     */\n    determine_winner(name_1, name_2) {\n        return new Promise((resolve, _) => {\n            console.log(`Determine winner between: ${name_1} & ${name_2}`);\n\n            const modal_wrapper = this._div.querySelector(\".modal-wrapper\");\n            const modal_header = modal_wrapper.querySelector(\".modal .header\");\n            const modal_text = modal_wrapper.querySelector(\".modal .text\");\n\n            //Create two modal titles, one that says the fight is between which participants, one that will announce the winning participant.\n            console.log(\"Showing a modal stating that the winner is being selected and the match is between which participants.\");\n            const header_deciding = document.createElement(\"h2\");\n            header_deciding.classList.add(\"title\");\n            const header_decided = document.createElement(\"h2\");\n            header_decided.classList.add(\"title\");\n            header_decided.classList.add(\"hide\");\n\n            header_deciding.innerText = `${name_1} VS ${name_2}`;\n            modal_header.insertAdjacentElement(\"beforeend\", header_deciding);\n            modal_header.insertAdjacentElement(\"beforeend\", header_decided);\n\n            let dots_count = 1;\n            //Set a modal text message stating the winner is being selected.\n            modal_text.innerText = \"Selecting winner.\";\n\n            //Have a dot style loader to show that the app is working to select a winner.\n            const dot_loading_handle = requestInterval(_ => {\n                dots_count = (dots_count % 4) + 1;\n                //Update the modal text message.\n                modal_text.innerText = `Selecting Winner${new Array(dots_count).join(\".\")}`;\n            }, 300);\n\n            requestTimeout(_ => {\n                //Stop the loader, select a participant at random, and announce the winner.\n                clearRequestInterval(dot_loading_handle);\n\n                //Select the winner at random.\n                console.log(\"Selecting a random winner.\");\n                const random_index_offset = this._random_generator.integer(0, 1);\n                let name_winner = name_2;\n                let name_loser = name_1\n                if (random_index_offset % 2 === 0) {\n                    name_winner = name_1;\n                    name_loser = name_2;\n                }\n                console.log(`Selected winner: ${name_winner}`);\n                console.log(`Selected loser: ${name_loser}`);\n                //Set a random winner-loser message and the title to the name of the winner.\n                if (this._messages.length === 0) {\n                    console.log(\"Ran out of winner-loser messages. Refilling the list.\");\n                    this._message = [...this._original_messages];\n                }\n                const random_message = this._random_generator.integer(0, this._messages.length - 1);\n                console.log(\"Showing random winner-loser message and removing it from the messages list.\");\n                modal_text.innerHTML = this._messages.splice(random_message, 1)[0].replace(/\\#winner/g, name_winner).replace(/\\#loser/g, name_loser);\n                header_decided.innerText = `${name_winner} is the winner!`;\n\n                requestTimeout(_ => {\n                    modal_header.classList.add(\"next\");\n                    header_deciding.classList.add(\"hide\");\n                    header_decided.classList.remove(\"hide\");\n\n                    modal_header.addEventListener(\"transitionend\", function move_fn() {\n                        modal_header.removeEventListener(\"transitionend\", move_fn);\n\n                        requestTimeout(_ => {\n                            //Hide the modal and show the return the selected winner.\n                            modal_wrapper.classList.add(\"hide\");\n                            modal_header.classList.remove(\"next\");\n                            header_deciding.remove();\n                            header_decided.remove();\n                            modal_text.innerText = \"\";\n\n                            console.log(`Returning the selected winner. (Index offset: ${random_index_offset})`);\n                            resolve(random_index_offset);\n                        }, 3500);\n                    });\n                }, 500);\n            }, 3000);\n\n            modal_wrapper.classList.remove(\"hide\");\n        });\n    }\n\n    /**\n     * Cleans up the current round.\n     * \n     * @param {number} round_index The round number.\n     */\n    async finish_round(round_index) {\n        console.log(`Round ${round_index} is complete.`);\n\n        if (this._round[round_index].length <= 1) {\n            //If only one participant remained after the completion of the current round, end the application and announce the winner.\n            console.log(\"This was the final round.\");\n            this.end(this._round[round_index][0]);\n            return;\n        }\n\n        const group_div_list = this._wrapper.querySelectorAll(\".group\");\n\n        group_div_list[0].addEventListener(\"transitionend\", function hide_fn() {\n            //When the first group is hidden, delete it and then push the second group to the left.\n            group_div_list[0].removeEventListener(\"transitionend\", hide_fn);\n\n            console.log(\"Initial participants group is hidden. Delete it.\");\n            group_div_list[0].remove();\n            requestTimeout(_ => {\n                console.log(\"Push the results participants group to the left, making it the new initial participants div.\");\n                group_div_list[1].classList.remove(\"right\");\n            }, 50);\n        });\n\n        const this_obj = this;\n\n        group_div_list[1].addEventListener(\"transitionend\", function move_fn() {\n            //When the second group has been pushed to the left, we can start the next round.\n            group_div_list[1].removeEventListener(\"transitionend\", move_fn);\n\n            console.log(\"Pushed the results participants group to the left.\");\n            const old_participant_size = this_obj._round[round_index].length;\n            console.log(\"Padding the new participants list.\");\n            this_obj.pad_participants_list(round_index);\n            const new_participant_size = this_obj._round[round_index].length;\n            //If a dummy participant was added, then we should add a participant div for it in the group.\n            if (new_participant_size > old_participant_size) {\n                console.log(\"Participants list was padded. Add the dummy participant(s) to the group participants list.\");\n                for (let extra_participant_index = old_participant_size; extra_participant_index < new_participant_size; extra_participant_index++) {\n                    const participant_div = this_obj.create_participant_div(this_obj._round[round_index][extra_participant_index]);\n                    participant_div.classList.remove(\"hide\");\n                    group_div_list[1].insertAdjacentElement(\"beforeend\", participant_div);\n                }\n            }\n\n            requestTimeout(_ => {\n                //Start the next round.\n                console.log(\"Start the next round.\");\n                this_obj.round_x(round_index + 1);\n            }, 1000);\n        });\n\n        //Hide the old group.\n        console.log(\"Hide the initial participants group.\");\n        group_div_list[0].classList.add(\"hide\");\n    }\n\n    /**\n     * End the application with a modal message stating the winner.\n     * \n     * @param {string} name The name of the winner.\n     */\n    async end(name) {\n        console.log(`Tournament complete! We have a winner: ${name}`);\n\n        console.log(\"Announce the winner in the modal.\");\n        const modal_wrapper = this._div.querySelector(\".modal-wrapper\");\n        const modal_header = modal_wrapper.querySelector(\".modal .header\");\n        const modal_text = modal_wrapper.querySelector(\".modal .text\");\n\n        //Create a modal title announcing the winner\n        const header = document.createElement(\"h2\");\n        header.classList.add(\"title\");\n        header.innerText = `${name} IS THE WINNER!!!`;\n        modal_header.insertAdjacentElement(\"beforeend\", header);\n\n        //Set a modal text message congratulating the winner.\n        modal_text.innerText = \"CONGRATULATIONS!\";\n\n        this._wrapper.classList.add(\"hide\");\n        modal_wrapper.classList.remove(\"hide\");\n\n        console.log(\"The tournament ends here.\");\n    }\n\n    /**\n     * Add a dummy participant if odd number of participants are present.\n     * \n     * @param {number} round_index The round number.\n     */\n    pad_participants_list(round_index) {\n        if (this._round[round_index].length % 2 === 1) {\n            console.log(`Odd number of participants in Round ${round_index}. Pad the list with a dummy participant.`);\n            this._round[round_index].push(\"---\");\n            console.log(\"Padded participants list.\");\n        }\n    }\n\n    /**\n     * Smooth scrolls the given element into view.\n     * \n     * @param {HTMLElement} el The element to scroll into view.\n     */\n    async scroll_element_into_view(el) {\n        console.log(\"Scrolling element into view: \");\n        console.log(el);\n        el.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n            inline: \"end\"\n        });\n        console.log(\"Scrolled element into view.\");\n    }\n\n    /**\n     * Creates a group div element,\n     * \n     * @return The created element.\n     */\n    create_group_div() {\n        console.log(\"Creating new round group div element.\");\n        const group_div = document.createElement(\"div\");\n        group_div.classList.add(\"group\");\n        group_div.classList.add(\"right\");\n        group_div.classList.add(\"hide\");\n        console.log(\"Created new round group div element.\");\n        return group_div;\n    }\n\n    /**\n     * Creates a participant div element with the given participant name.\n     * \n     * @param {string} name The participant name.\n     * \n     * @return The created element.\n     */\n    create_participant_div(name) {\n        console.log(`Creating new round participant div element for participant: ${name}`);\n        const participant_div = document.createElement(\"div\");\n        participant_div.classList.add(\"participant\");\n        participant_div.classList.add(\"hide\");\n        participant_div.innerText = name;\n        console.log(\"Created new round participant div element.\");\n        return participant_div;\n    }\n}"],"sourceRoot":""}